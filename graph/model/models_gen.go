// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Person interface {
	IsPerson()
	GetID() string
	GetAddress() string
}

type Bob struct {
	ID      string `json:"id"`
	Name    string `json:"name"`
	Address string `json:"address"`
}

func (Bob) IsPerson()               {}
func (this Bob) GetID() string      { return this.ID }
func (this Bob) GetAddress() string { return this.Address }

type George struct {
	ID      string `json:"id"`
	Name    string `json:"name"`
	Address string `json:"address"`
}

func (George) IsPerson()               {}
func (this George) GetID() string      { return this.ID }
func (this George) GetAddress() string { return this.Address }

type PersonFilter struct {
	ID      []string          `json:"id"`
	Name    *StringTermFilter `json:"name"`
	Address *StringTermFilter `json:"address"`
}

type Sara struct {
	ID      string `json:"id"`
	Name    string `json:"name"`
	Address string `json:"address"`
}

func (Sara) IsPerson()               {}
func (this Sara) GetID() string      { return this.ID }
func (this Sara) GetAddress() string { return this.Address }

type StringTermFilter struct {
	Allofterms *string `json:"allofterms"`
	Anyofterms *string `json:"anyofterms"`
}
